<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Reply.Manager.Images.TmdbAdapter</name>
    </assembly>
    <members>
        <member name="T:Reply.Manager.Images.TmdbAdapter.Clients.ITmdbApi">
            <summary>
            Esta interface representa o cliente da API TMDb. 
            A sua implementacao eh gerada automaticamente com base nas decoracoes.
            A biblioteca Refit eh responsavel pela geracao do codigo (https://github.com/reactiveui/refit).
            </summary>
        </member>
        <member name="T:Reply.Manager.Images.TmdbAdapter.Clients.TmdbSearchMoviesGet">
            <summary>
            Modelo do entrada para a rota /search/movie do TMDb API (https://developers.themoviedb.org/3/search/search-movies)
            <para>
            Este modelo representa exatamente os parametros para requisicoes na rota search/movie API TMDb e
            eh utilizado como parametro de entrada para o metodo <see cref="M:Reply.Manager.Images.TmdbAdapter.Clients.ITmdbApi.SearchMovies(Reply.Manager.Images.TmdbAdapter.Clients.TmdbSearchMoviesGet)"/>.
            </para>
            <para>    
            Note que esta classe eh interna ao Adaptador, 
            os dados serao mapeados a partir de <see cref="T:Reply.Manager.Images.Domain.Models.Pesquisa" />.
            O mapeamento eh feito em <see cref="M:Reply.Manager.Images.TmdbAdapter.TmdbAdapter.GetFilmesAsync(Reply.Manager.Images.Domain.Models.Pesquisa,System.String)"/>.
            </para>
            </summary>
        </member>
        <member name="T:Reply.Manager.Images.TmdbAdapter.Clients.TmdbSearchMoviesGetResult">
            <summary>
            Modelo do retorno para a rota /search/movie do TMDb API (https://developers.themoviedb.org/3/search/search-movies)
            <para>
            Este modelo representa exatamente o retorno da rota search/movie API TMDb e
            eh o retorno do metodo <see cref="M:Reply.Manager.Images.TmdbAdapter.Clients.ITmdbApi.SearchMovies(Reply.Manager.Images.TmdbAdapter.Clients.TmdbSearchMoviesGet)"/>.
            O Refit implementa a deserializacao do resultado da chamada para esta estrutura.
            </para>
            <para>    
            Note que esta classe eh interna ao Adaptador, 
            os dados serao mapeados para <see cref="T:Reply.Manager.Images.Domain.Models.Filme" /> para serem expostos.
            O mapeamento eh feito em <see cref="M:Reply.Manager.Images.TmdbAdapter.TmdbAdapter.GetFilmesAsync(Reply.Manager.Images.Domain.Models.Pesquisa,System.String)"/>.
            </para>
            </summary>
        </member>
        <member name="T:Reply.Manager.Images.TmdbAdapter.Clients.AutoGeneratedITmdbApi">
            <inheritdoc />
        </member>
        <member name="P:Reply.Manager.Images.TmdbAdapter.Clients.AutoGeneratedITmdbApi.Client">
            <inheritdoc />
        </member>
        <member name="M:Reply.Manager.Images.TmdbAdapter.Clients.AutoGeneratedITmdbApi.#ctor(System.Net.Http.HttpClient,Refit.IRequestBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Reply.Manager.Images.TmdbAdapter.Clients.AutoGeneratedITmdbApi.SearchMovies(Reply.Manager.Images.TmdbAdapter.Clients.TmdbSearchMoviesGet)">
            <inheritdoc />
        </member>
    </members>
</doc>
